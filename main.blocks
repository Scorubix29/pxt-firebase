<xml xmlns="https://developers.google.com/blockly/xml"><variables></variables><block type="pxt-on-start" id="x]2~!vC_;I}bBDUh$O@4" x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id="?.hzh`stv=dFJctw2lWE"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace firebaseSerial {" line1="" line2="    let currentCommand: string = &quot;&quot;" line3="" line4="    /**" line5="     * Start listening to Firebase serial data" line6="     */" line7="    //% block=&quot;start Firebase serial listener&quot;" line8="    export function startListener(): void {" line9="        serial.onDataReceived(serial.delimiters(Delimiters.NewLine), function () {" line10="            currentCommand = serial.readUntil(serial.delimiters(Delimiters.NewLine))" line11="            control.raiseEvent(3100, 1)" line12="        })" line13="    }" line14="" line15="    /**" line16="     * Runs when a command is received from Firebase" line17="     */" line18="    //% block=&quot;on Firebase command received&quot;" line19="    export function onCommandReceived(handler: () =&gt; void): void {" line20="        control.onEvent(3100, 1, handler)" line21="    }" line22="" line23="    /**" line24="     * Returns the current Firebase command" line25="     */" line26="    //% block=&quot;get current Firebase command&quot;" line27="    export function getCommand(): string {" line28="        return currentCommand" line29="    }" line30="}" numlines="31"></mutation></block></statement></block></xml>